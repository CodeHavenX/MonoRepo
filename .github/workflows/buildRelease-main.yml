# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Build All Targets Release Tag

on:
  push:
    tags:
      - '*'
  workflow_dispatch:

permissions:
  contents: write

env:
  ANDROID_HOME: "/opt/Android/sdk"
  
jobs:
  build:
    runs-on: self-hosted
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        java-version: '21'
        distribution: 'corretto'
    - name: Build with Gradle
      uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
      with:
        arguments: releaseAll
    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        # List of files to include in the release
        files: |
          edifikana/back-end/build/libs/back-end-all.jar
          edifikana/front-end/app-wasm/build/dist/wasmJs/EdifikanaWasmApp.zip
          samples/service-ktor/build/libs/service-ktor-all.jar
          samples/jbcompose-wasm-app/build/dist/wasmJs/SamplesWasmApp.zip
          runasimi/front-end/app-wasm/build/dist/wasmJs/RunasimiWasmApp.zip
    - name: 'Login to GitHub Container Registry'
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: cramsan
        password: ${{ secrets.GR_PAT }}
    - name: Push containers to the container registry
      run: |
        ./scripts/deploy_images.sh

  notify:
    runs-on: ubuntu-latest
    needs: build
    environment: "Coolify"
    steps:
    - name: Invoke deployment hook
      uses: distributhor/workflow-webhook@v3
      with:
        webhook_url: ${{ vars.WEBHOOK_URL }}
        webhook_auth_type: "bearer"
        webhook_auth: ${{ secrets.WEBHOOK_AUTH }}
